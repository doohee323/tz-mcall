apiVersion: apps/v1
kind: Deployment
metadata:
  name: tz-mcall-${GIT_BRANCH}
spec:
  selector:
    matchLabels:
      app: tz-mcall-${GIT_BRANCH}
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        org: ejn
        team: devops
        project: mcall
        environment: ${STAGING}
        app: tz-mcall-${GIT_BRANCH}
    spec:
      imagePullSecrets:
        - name: ejn-registrykey
      containers:
      - name: tz-mcall-${GIT_BRANCH}
        image: ${REPOSITORY_TAG}
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: tz-mcall-${GIT_BRANCH}
      nodeSelector:
        team: devops
        environment: ${STAGING}

---
apiVersion: v1
kind: Service
metadata:
  name: tz-mcall-${GIT_BRANCH}
spec:
  selector:
    app: tz-mcall-${GIT_BRANCH}
  type: NodePort
  ports:
    - port: 3000
      name: api-3000
      targetPort: 3000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tz-mcall-${GIT_BRANCH}
data:
  GIT_BRANCH: ${GIT_BRANCH}
  container_env: 'docker'

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tz-mcall-${GIT_BRANCH}
  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
  - host: ${GIT_BRANCH}.mcall.${DOMAIN_NAME}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tz-mcall-${GIT_BRANCH}
            port:
              number: 3000
  tls:
    - hosts:
        - ${GIT_BRANCH}.mcall.${DOMAIN_NAME}
      secretName: tz-mcall-${GIT_BRANCH}
